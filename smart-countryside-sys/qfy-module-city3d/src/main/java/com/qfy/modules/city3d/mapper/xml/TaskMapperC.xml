<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qfy.modules.city3d.mapper.TaskMapperC" >
  <resultMap id="BaseResultMap" type="com.qfy.modules.city3d.po.City3dTask" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="cycle" property="cycle" jdbcType="VARCHAR" />
    <result column="is_true" property="isTrue" jdbcType="VARCHAR" />
    <result column="week" property="week" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, date, cycle, is_true, week
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qfy.modules.city3d.po.TaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from task
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qfy.modules.city3d.po.TaskExample" >
    delete from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qfy.modules.city3d.po.City3dTask" >
    insert into task (id, name, date,
      cycle, is_true, week
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR},
      #{cycle,jdbcType=VARCHAR}, #{isTrue,jdbcType=VARCHAR}, #{week,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qfy.modules.city3d.po.City3dTask" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="cycle != null" >
        cycle,
      </if>
      <if test="isTrue != null" >
        is_true,
      </if>
      <if test="week != null" >
        week,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="cycle != null" >
        #{cycle,jdbcType=VARCHAR},
      </if>
      <if test="isTrue != null" >
        #{isTrue,jdbcType=VARCHAR},
      </if>
      <if test="week != null" >
        #{week,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qfy.modules.city3d.po.TaskExample" resultType="java.lang.Integer" >
    select count(*) from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.cycle != null" >
        cycle = #{record.cycle,jdbcType=VARCHAR},
      </if>
      <if test="record.isTrue != null" >
        is_true = #{record.isTrue,jdbcType=VARCHAR},
      </if>
      <if test="record.week != null" >
        week = #{record.week,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      cycle = #{record.cycle,jdbcType=VARCHAR},
      is_true = #{record.isTrue,jdbcType=VARCHAR},
      week = #{record.week,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qfy.modules.city3d.po.City3dTask" >
    update task
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="cycle != null" >
        cycle = #{cycle,jdbcType=VARCHAR},
      </if>
      <if test="isTrue != null" >
        is_true = #{isTrue,jdbcType=VARCHAR},
      </if>
      <if test="week != null" >
        week = #{week,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qfy.modules.city3d.po.City3dTask" >
    update task
    set name = #{name,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      cycle = #{cycle,jdbcType=VARCHAR},
      is_true = #{isTrue,jdbcType=VARCHAR},
      week = #{week,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectTaskCountToday" resultType="java.lang.Integer" >
    select count(t.*) from (
	select * from task where cycle = 'day'
	union
	select * from task where cycle = 'week' and week = (
	select case
	when extract(dow FROM now()) = '1' then '星期一'
	when extract(dow FROM now()) = '2' then '星期二'
	when extract(dow FROM now()) = '3' then '星期三'
	when extract(dow FROM now()) = '4' then '星期四'
	when extract(dow FROM now()) = '5' then '星期五'
	when extract(dow FROM now()) = '6' then '星期六'
	when extract(dow FROM now()) = '0' then '星期日'
	end)
	union
	select * from task where cycle = 'month'
	and date &gt;= substring(cast(now() as varchar),0,11)
	and date &lt; substring((cast((now() + interval '1day')as varchar)),0,11)
	union
	select * from task where cycle = 'none'
	and date &gt;= substring(cast(now() as varchar),0,11)
	and date &lt; substring((cast((now() + interval '1day')as varchar)),0,11)
	)as t
 </select>
 <select id="selectTaskToday" resultMap="BaseResultMap" >
	select * from task where cycle = 'day'
	union
	select * from task where cycle = 'week' and week = (
	select case
	when extract(dow FROM now()) = '1' then '星期一'
	when extract(dow FROM now()) = '2' then '星期二'
	when extract(dow FROM now()) = '3' then '星期三'
	when extract(dow FROM now()) = '4' then '星期四'
	when extract(dow FROM now()) = '5' then '星期五'
	when extract(dow FROM now()) = '6' then '星期六'
	when extract(dow FROM now()) = '0' then '星期日'
	end)
	union
	select * from task where cycle = 'month'
	and date &gt;= substring(cast(now() as varchar),0,11)
	and date &lt; substring((cast((now() + interval '1day')as varchar)),0,11)
	union
	select * from task where cycle = 'none'
	and date &gt;= substring(cast(now() as varchar),0,11)
	and date &lt; substring((cast((now() + interval '1day')as varchar)),0,11)
 </select>
 <select id="selectTaskNextDays" resultMap="BaseResultMap" parameterType="java.lang.String" >
	select * from (select * from task where cycle = 'day'
	union
	select * from task where cycle = 'week' and week = #{weekStr}
	union
	select * from task where cycle = 'month'
	and date like concat(#{dateStr},'%')
	union
	select * from task where cycle = 'none'
	and date like concat(#{dateStr},'%'))as t
	order by substring(t.date,12,16)
 </select>
</mapper>
